@using SandwichSwap.ViewModels
@model MenuViewModel

@{
    Bread sandwichBread = new Bread();
    var sandwichToppings = new List<Topping>();
}

@section Head{
    <link rel="stylesheet" href="~/Styles/Order.css" />
    <title>Menu</title>
    <script src="~/scripts/jquery-1.8.0.js"></script>
    <script src="~/scripts/jquery.unobtrusive-ajax.js"></script>
    <script>
        $(document).ready(function () {
            var numOfRows = 3;
            $("#addRow").click(function () {

                if (numOfRows <= @Model.Toppings.Count +5) {
                    $("#dropDown").clone().appendTo("#toppingTable");
                    numOfRows++;
                }
                else {
                    alert("You have too many toppings!")
                }

            });

            $("#saveSandwich").click(function () {
                var toppings = [];
                $(".toppingList").each(function () {
                    var toppingId = $(this).val();
                    toppings.push(toppingId);
                });


                var myData = { breadId: $("#breadDropDown").val(), toppingIds: toppings };


                $.ajax({
                    url: '/Home/SaveSandwich',
                    data: myData,
                    traditional: true,
                    success: function () {
                        alert("Your sandwich has been saved!")
                    },
                    error: function () {
                        alert("Something went wrong.")
                    }
                });
            });
        });
    </script>
}
@section top{
    <div class="transp">
        <h1 class="welcome">
            Menu
        </h1>
    </div>
}

<div id="hiddenForm" style="visibility: hidden">
    <div id="dropDown">
        <select class="toppingList">
            @foreach (Topping t in Model.Toppings)
            {
                <option value=@t.Id>@t.name</option>}
        </select>

    </div>
</div>

@using (Html.BeginForm("Order", "Home"))
{
    <select id="breadDropDown">
        @foreach (Bread t in Model.Breads)
        {
            @:Bread Type:
            <option value="@t.Id">@t.name</option>
        }
    </select>

    @Html.Partial("_ToppingTablePartialView", Model)

    <input type="button" id="saveSandwich" value="Save Sandwich (Not Finished)" />

    <input type="submit" id="orderSubmit" value="Order Sandwich" />

}
@foreach(Sandwich s in Model.sandwiches){
    @Html.Partial("_MenuDisplayPartialView", s)
}
